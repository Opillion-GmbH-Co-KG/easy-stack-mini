services:

  python:
    hostname: python
    container_name: python
    restart: unless-stopped
    build:
      context: .docker/${DOCKER_IMAGE_SOURCE}/
      dockerfile: python.Dockerfile
      args:
        BASE_IMAGE_TAG: ${BASE_IMAGE_TAG}
        DEV_IMAGE_TAG: ${DEV_IMAGE_TAG}
        PROD_IMAGE_TAG: ${PROD_IMAGE_TAG}
    ports:
      - "${PYTHON_EXTERNAL_PORT}:${PYTHON_INTERNAL_PORT}"  # 8000:5000
    volumes:
      - ./python/app:/var/www
    environment:
      REDIS_INTERNAL_PORT: ${REDIS_INTERNAL_PORT}
      REDIS_INTERNAL_TWO_PORT: ${REDIS_INTERNAL_TWO_PORT}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_USERNAME: ${REDIS_USERNAME}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DATABASE_NAME: ${REDIS_DATABASE_NAME}
      REDIS_DATABASE_TEST_NAME: ${REDIS_DATABASE_TEST_NAME}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://python:${PYTHON_INTERNAL_PORT}/healthz"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 10s
    networks:
      - default


volumes:
  python-data:


networks:
  default:
    name: ${DOCKER_NETWORK}
    driver: bridge
